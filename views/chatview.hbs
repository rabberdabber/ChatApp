
<div class="chat-container">
    <header class="chat-header">
        {{#if peer }}
            <h1>{{peer}}</h1> 
        {{ else }}
            <h1> Users </h1>
        {{/if}}
        
    </header>
    


    {{#if peer }}
    <main class="chat-main">
        <div id="chatlists" class="chat-sidebar">
            
        </div>

        <div id="chatMessages" class="chat-messages">
           
        </div>

    </main>

    <div class="offset-sm-5 chat-form-container">
        <form id="submit-message" action="/chats/write-message" method="POST">
            <textarea id="msg" type="text" name="message" placeholder="Enter Message" autocomplete="off"></textarea>
            <input type="hidden" name="from" value="{{user.username}}">
            <input type="hidden" name="to" value="{{peer}}">

            <button id="sendbtn" class="btn message-btn" onclick="clear()" style="color: white;"><i class="fas fa-paper-plane"></i> Send</button>
        </form>
    </div>
    {{ else }}
        <main>
            <div id="chatlists">
        
            </div>
        </main>
    {{/if}}
</div>



{{> footerjs }}

<script src="/socket.io/socket.io.js"></script>
<script>

    $(document).ready(function () {
        var socket = io('/view');
        var listUsers = function(chatlist) {
            for (var i = 0; i < chatlist.length; i++) {
                chatdata = chatlist[i];

                if (chatdata == '{{peer}}') {
                    $('#chatlists')
                        .append('<a class="btn btn-lg btn-block btn-outline-dark" data-user=' + chatdata + ' href = "/chats/view?user=' + chatdata + '">' + chatdata + '</a>');
                }
                else {
                    $('#chatlists')
                        .append('<a class="btn btn-lg btn-block btn-outline-light" data-user=' + chatdata + ' href = "/chats/view?user=' + chatdata + '">' + chatdata + '</a>');
                }
            }
        }
        var chatlist = '{{chatlist}}'.split(',');

        listUsers(chatlist);
        socket.on('chatlists', function (data) {
            var chatlist = data.chatlist;
            $('#chatlists').empty();
            listUsers(chatlist);
            changeColor();
        });
    }); 
</script>

{{#if peer }}
<script>
    $(document).ready(function () {
        console.log('EMIT getchatmessages');

        io('/view').emit('getchatmessages', {user:'{{peer}}', username:'{{user.username}}'}, function (msgs) {
            console.log("RECEIVE getchatmessages reply " + JSON.stringify(msgs));

            $('#chatMessages').empty();
            if (msgs.length > 0) {
                msgs.forEach(function (newmsg) {
                    $('#chatMessages').prepend(formatMessage(newmsg));
                });
                $('#chatMessages').show();
                connectMsgDelButton();
            } else $('#chatMessages').hide();
        });

        var connectMsgDelButton = function () {
            $('.message-del-button').on('click', function (event) {
                $.post('/chats/del-message', {
                    id: $(this).data("id")
                },
                    function (response) { });
                event.preventDefault();
            });
        };

        var formatMessage = function (newmsg) {
            var color = '#1E90FF';

            const time = new Date(newmsg.timestamp).toLocaleTimeString();
            if (newmsg.from == '{{peer}}'){
                color = '#DCDCDC';
                return '<div id="chat-message-' + newmsg.id + '" style="background-color:' + color + ';" class="message col-6 card">'
                    + '<div><i class="fa-solid fa-circle-user fa-lg"></i>'
                    + '<p class="meta">' + newmsg.from + " " + '<span style="color: black;">' + time + '</span>' + '</p>'
                    + newmsg.message + '</div>'
                    + '<div class="offset-11 col-1"> <button type="button" class="btn btn-danger message-del-button" data-id="'
                    + newmsg.id + '">' + '&cross; </button></div>' + '</div>';
            }

            return '<div id="chat-message-' + newmsg.id + '" style="background-color:' + color + ';" class="message offset-6 card">'
                + '<div><i class="fa-solid fa-circle-user fa-lg"></i>'
                + '<p class="meta">' + newmsg.from + '<span>' + " " + time + '</span>' + '</p>'
                + newmsg.message + '</div>'
                + '<div class="offset-11 col-1"><button type="button" class="btn btn-danger message-del-button" data-id="'
                + newmsg.id + '">' + '&cross; </button></div>' + '</div>';
        };

        io('/view').on('newmessage', function (newmsg) {
            console.log('{{peer}} received newmessage ' + JSON.stringify(newmsg));
            console.log('{{user.username}}');
            if (newmsg.from === '{{user.username}}'|| '{{peer}}' == newmsg.from ) {
                $('#chatMessages').append(formatMessage(newmsg));
                $('#chatMessages').show();
                connectMsgDelButton();
                $('#chatMessages').scrollTop($('#chatMessages')[0].scrollHeight);
            }
        });

        io('/view').on('destroymessage', function (data) {
            console.log('{{peer}} received destroymessage ' + JSON.stringify(data));
            $('#chatMessages #chat-message-' + data.id).remove();
    
        });

        $('form#submit-message').submit(function (event) {

            // Abort any pending request
            if (request) {
                request.abort();
            }

            var $form = $('form#submit-message');
            tinyMCE.activeEditor.dom.addClass(tinyMCE.activeEditor.dom.select('p'), 'text');
            tinyMCE.triggerSave();

          
            var request = $.ajax({
                type: $form.attr('method'),
                url: $form.attr('action'),
                data: $form.serialize()
            });

            request.done(function (response, textStatus, jqXHR) { });

            request.fail(function (jqXHR, textStatus, errorThrown) {
                alert("ERROR " + jqXHR.responseText);
            });
            tinymce.activeEditor.setContent('<p></p>');
            event.preventDefault();
        });

    }); 
</script>
{{/if}}
